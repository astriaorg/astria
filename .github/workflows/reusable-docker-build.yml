name: Reusable Docker Build && Push Workflow

on:
  workflow_call:
    inputs:
      depot-project-id:
        required: true
        type: string
      package-name:
        required: true
        type: string
      binary-name:
        required: true
        type: string
      binary-prefix:
        type: string
        default: astria
      tag:
        required: false
        type: string
        description: "Git tag, branch name, version"
      force:
        required: false
        type: boolean
        default: false
      debug:
        required: false
        type: boolean
        default: false
    secrets:
      DOCKER_TOKEN:
        required: false
      DOCKER_USER:
        required: false
env:
  REGISTRY: ghcr.io
  REPO_ORG: astriaorg
  # FULL_REF is either the full ref of the branch or tag e.g. refs/heads/main or refs/tags/v0.1.0
  FULL_REF: ${{ inputs.tag && format('refs/tags/{0}', inputs.tag) || github.ref }}
  PACKAGE_NAME: ${{ inputs.package-name }}
  FULL_BINARY_NAME: ${{ inputs.binary-prefix }}-${{ inputs.binary-name }}
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    if: inputs.force || startsWith(inputs.tag, inputs.binary-name) || !inputs.tag && (startsWith(github.ref, format('refs/tags/{0}-v', inputs.binary-name)) || github.ref == 'refs/heads/main' || github.event_name == 'pull_request' || github.event_name == 'merge_group')
    steps:
      # Checking out the repo
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          submodules: 'true'
      - name: Dump GitHub context
        if: inputs.debug
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      # Use version-check to extract version from Cargo.toml if no tag is provided
      - name: Extract version from Cargo.toml
        id: version_check
        if: inputs.tag == ''
        uses: joroshiba/version-check@v2
        with:
          file: crates/astria-${{ inputs.binary-name }}/Cargo.toml
          failBuild: false
      - name: Generate short commit SHA
        id: short_sha
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
      - uses: depot/setup-action@v1
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'astriaorg/astria'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Generate correct image tags
      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ format('{0}/{1}/{2}', env.REGISTRY, env.REPO_ORG, env.PACKAGE_NAME) }}
          flavor: |
            # Turn off auto-tagging for latest and do it manually below in tags
            latest=false
          tags: |
            # All builds: short/full commit SHA
            type=sha,format=short
            type=sha,format=long

            # PR builds: tag with pr-num AND set full commit SHA from the PR head
            type=ref,event=pr
            type=raw,value=sha-${{ github.event.pull_request.head.sha || github.sha }},enable=${{ startsWith(env.FULL_REF, 'refs/pull/') }}

            # Main branch builds: latest, full commit SHA AND major.minor.patch-dev.<SHA>
            type=raw,value=latest,enable=${{ env.FULL_REF == format('refs/heads/{0}', 'main') }}
            type=raw,value=${{ steps.version_check.outputs.releaseVersion }}-dev.${{ steps.short_sha.outputs.short_sha }},enable=${{ env.FULL_REF == format('refs/heads/{0}', 'main') }}

            # Release builds: tag with semver and match with version
            type=match,pattern=refs/tags/${{ inputs.binary-name }}-v(.*),group=1,enable=${{ startsWith(env.FULL_REF, 'refs/tags/') }},value=${{ env.FULL_REF }}
            type=semver,pattern={{version}},enable=${{ startsWith(env.FULL_REF, 'refs/tags/') && contains(env.FULL_REF, '-v') }}

            # Direct input version
            type=raw,value=${{ inputs.tag }},enable=${{ inputs.tag != '' && !startsWith(inputs.tag, 'refs/')}}

      - name: Build and push
        uses: depot/build-push-action@v1
        with:
          # this gets rid of the unknown/unknown image that is created without this setting
          # https://github.com/docker/build-push-action/issues/820#issuecomment-1455687416
          provenance: false
          context: .
          file: containerfiles/Dockerfile
          build-args: |
            TARGETBINARY=${{ env.FULL_BINARY_NAME }}
          platforms: "linux/amd64,linux/arm64"
          push: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == 'astriaorg/astria' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          project: ${{ inputs.depot-project-id }}
