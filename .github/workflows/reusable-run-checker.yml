name: Reusable Run Checker Workflow

on:
  workflow_call:
    outputs:
      run_tests:
        description: If tests need to be run, will be 'true'
        value: ${{ jobs.changes.outputs.test_workflow == 'true' || jobs.changes.outputs.crates == 'true' }}
      run_docker:
        description: If docker workflow needs to be run, will be 'true'
        value: ${{ jobs.changes.outputs.docker_workflow == 'true' || jobs.changes.outputs.crates == 'true' || contains(github.ref, 'refs/tags/v') }}
      run_lint_proto:
        description: If lint for protos needs to be run, will be 'true'
        value: ${{ jobs.changes.outputs.lint_workflow == 'true' || jobs.changes.outputs.proto == 'true' }}
      run_lint_rust:
        description: If lint for rust needs to be run, will be 'true'
        value: ${{ jobs.changes.outputs.lint_workflow == 'true' || jobs.changes.outputs.rust == 'true' || jobs.changes.outputs.rustfmt == 'true' }}
      run_lint_toml:
        description: If lint for toml needs to be run, will be 'true'
        value: ${{ jobs.changes.outputs.lint_workflow == 'true' || jobs.changes.outputs.toml == 'true' }}
      run_lint_markdown:
        description: If lint for markdown needs to be run, will be 'true'
        value: ${{ jobs.changes.outputs.lint_workflow == 'true' || jobs.changes.outputs.markdown == 'true' }}
      run_release_proto:
        description: If release for protos needs to be run, will be 'true'
        value: ${{ jobs.changes.outputs.release_workflow == 'true' || jobs.changes.outputs.proto == 'true' }}
      run_release_services:
        description: If release for services needs to be run, will be 'true'
        value: ${{ jobs.changes.outputs.release_workflow == 'true' || jobs.changes.outputs.crates == 'true' }}

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      release_workflow: ${{ steps.filters.outputs.release_workflow }}
      test_workflow: ${{ steps.filters.outputs.test_workflow }}
      docker_workflow: ${{ steps.filters.outputs.docker_workflow }}
      lint_workflow: ${{ steps.filters.outputs.lint_workflow }}
      crates: ${{ steps.filters.outputs.crates }}
      proto: ${{ steps.filters.outputs.proto }}
      rust: ${{ steps.filters.outputs.rust }}
      toml: ${{ steps.filters.outputs.toml }}
      markdown: ${{ steps.filters.outputs.markdown }}
      rustfmt: ${{ steps.filters.outputs.rustfmt }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filters
        with:
          list-files: json
          filters: |
            release_workflow:
              - '.github/workflows/release.yml'
              - '.github/workflows/reusable-cargo-version.yml'
            test_workflow:
              - '.github/workflows/test.yml'
            docker_workflow:
              - '.github/workflows/docker-build.yml'
              - '.github/workflows/reusable-docker-build.yml'
              - 'containerfiles/**'
              - '.dockerignore'
            lint_workflow:
              - '.github/workflows/lint.yml'
            crates:
              - 'crates/**'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - '.cargo/**'
            proto:
              - '**/*.proto'
            rust:
              - '**/*.rs'
            toml:
              - '**/*.toml'
            markdown:
              - '**/*.md'
            rustfmt:
              - 'rustfmt.toml'
