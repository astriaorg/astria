name: Reusable Binary Build && Push Workflow

on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  upload-binaries:
    if: startsWith(github.ref, format('refs/tags/{0}-v', inputs.package-name)) || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: buildjet-4vcpu-ubuntu-2004
            build-tool: cargo
          - target: aarch64-apple-darwin
            os: macos-latest
            build-tool: cargo
          - target: x86_64-apple-darwin
            os: macos-latest
            build-tool: cargo
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.73.0
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: astria-${{ inputs.package-name }}
          dry-run: ${{ !startsWith(github.ref, format('refs/tags/{0}-v', inputs.package-name)) }}
          # (optional) Target triple, default is host triple.
          target: ${{ matrix.target }}
          # (optional) Tool to build binaries (cargo, cross, or cargo-zigbuild)
          build-tool: ${{ matrix.build-tool }}
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
