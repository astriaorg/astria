// these types are copy pasted from here: https://github.com/cosmos/cosmos-sdk/blob/v0.44.0/proto/cosmos/tx/v1beta1/tx.proto

syntax = "proto3";
import "google/protobuf/any.proto";

// TxRaw is a variant of Tx that pins the signer's exact binary representation
// of body and auth_info. This is used for signing, broadcasting and
// verification. The binary `serialize(tx: TxRaw)` is stored in Tendermint and
// the hash `sha256(serialize(tx: TxRaw))` becomes the "txhash", commonly used
// as the transaction ID.
message TxRaw {
  // body_bytes is a protobuf serialization of a TxBody that matches the
  // representation in SignDoc.
  bytes body_bytes = 1;

  // auth_info_bytes is a protobuf serialization of an AuthInfo that matches the
  // representation in SignDoc.
  bytes auth_info_bytes = 2;

  // signatures is a list of signatures that matches the length and order of
  // AuthInfo's signer_infos to allow connecting signature meta information like
  // public key and signing mode by position.
  repeated bytes signatures = 3;
}

// TxBody is the body of a transaction that all signers sign over.
message TxBody {
    // messages is a list of messages to be executed. The required signers of
    // those messages define the number and order of elements in AuthInfo's
    // signer_infos and Tx's signatures. Each required signer address is added to
    // the list only the first time it occurs.
    // By convention, the first required signer (usually from the first message)
    // is referred to as the primary signer and pays the fee for the whole
    // transaction.
    repeated Message messages = 1;
  
    // memo is any arbitrary note/comment to be added to the transaction.
    // WARNING: in clients, any publicly exposed text should not be called memo,
    // but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).
    string memo = 2;
  
    // timeout is the block height after which this transaction will not
    // be processed by the chain
    uint64 timeout_height = 3;
  
    // extension_options are arbitrary options that can be added by chains
    // when the default options are not sufficient. If any of these are present
    // and can't be handled, the transaction will be rejected
    repeated google.protobuf.Any extension_options = 1023;
  
    // extension_options are arbitrary options that can be added by chains
    // when the default options are not sufficient. If any of these are present
    // and can't be handled, they will be ignored
    repeated google.protobuf.Any non_critical_extension_options = 2047;
  }
  
  message Message {
    // type_url is the fully-qualified type URL of the Any.
    string type_url = 1;
  
    // value is the binary serialized protobuf message, matching `type_url`.
    bytes value = 2;
  }