apiVersion: v1
data:
  init-bridge.sh: |
    #!/bin/sh

    set -o errexit -o nounset

    ./celestia bridge init \
      --node.store "$home_dir/bridge" \
      --core.ip 127.0.0.1
    cp -r "$home_dir/keyring-test" "$home_dir/bridge/keys/"
  start-bridge.sh: |
    #!/bin/bash

    set -o errexit -o nounset -o pipefail

    genesis_hash=$(curl -s -S -X GET "http://127.0.0.1:26657/block?height=1" | jq -r '.result.block_id.hash')
    if [ -z "$genesis_hash" ]
    then
      echo "did not receive genesis hash from celestia; exiting"
      exit 1
    else
      echo "genesis hash received: $genesis_hash"
    fi

    export CELESTIA_CUSTOM="test:$genesis_hash"
      # --p2p.network "test:$celestia_custom"
    export GOLOG_LOG_LEVEL="debug"
    exec ./celestia bridge start \
      --node.store "$home_dir/bridge" \
      --gateway \
      --keyring.accname "$validator_key_name"
kind: ConfigMap
metadata:
  name: bridge-scripts-tctfb6gktd
---
apiVersion: v1
data:
  init-celestia-appd.sh: |
    #!/bin/sh

    set -o errexit -o nounset

    celestia-appd init "$chainid" \
      --chain-id "$chainid" \
      --home "$home_dir"

    celestia-appd keys add \
      "$validator_key_name" \
      --keyring-backend="$keyring_backend" \
      --home "$home_dir"

    validator_key=`celestia-appd keys show "$validator_key_name" -a --keyring-backend="$keyring_backend" --home "$home_dir"`
    celestia-appd add-genesis-account \
      "$validator_key" \
      --home "$home_dir" \
      "$coins"

    celestia-appd gentx \
      "$validator_key_name" \
      "$validator_stake" \
      --keyring-backend="$keyring_backend" \
      --chain-id "$chainid" \
      --home "$home_dir" \
      --orchestrator-address "$validator_key" \
      --evm-address "$evm_address"

    celestia-appd collect-gentxs --home "$home_dir"
  start-celestia-appd.sh: |
    #!/bin/sh

    set -o errexit -o nounset

    # Start the celestia-app
    exec celestia-appd start --home "${home_dir}"
kind: ConfigMap
metadata:
  name: celestia-appd-scripts-mgmh8g995k
---
apiVersion: v1
data:
  configure-metro.sh: |
    #!/bin/sh

    set -o errexit -o nounset -o pipefail

    # change ports that we know metro metro will not receive messages on
    # so they won't interfere with celestia-app ports:
    #
    # ~/.metro # netstat -lntp
    # Active Internet connections (only servers)
    # Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
    #                     config.toml:.rpc.pprof_laddr
    # tcp        0      0 127.0.0.1:6060          0.0.0.0:*               LISTEN      110/metro
    #                     config.toml:.rpc.laddr
    # tcp        0      0 :::26657                :::*                    LISTEN      110/metro
    #                     p2p.laddr
    # tcp        0      0 :::26656                :::*                    LISTEN      110/metro
    #                     app.toml:.api.address
    # tcp        0      0 :::1317                 :::*                    LISTEN      110/metro
    #                     app.toml:.grpc.address
    # tcp        0      0 :::9091                 :::*                    LISTEN      110/metro
    #                     app.toml:.grpc-web.address
    # tcp        0      0 :::9090                 :::*                    LISTEN      110/metro
    dasel put -r toml '.rpc.pprof_laddr' -t string -v "127.0.0.1:60000" -f "$home_dir/config/config.toml"
    dasel put -r toml '.rpc.laddr' -t string -v "tcp://0.0.0.0:60001" -f "$home_dir/config/config.toml"
    dasel put -r toml '.p2p.laddr' -t string -v "tcp://0.0.0.0:60002" -f "$home_dir/config/config.toml"
    dasel put -r toml '.api.address' -t string -v "tcp://0.0.0.0:1318" -f "$home_dir/config/app.toml"
    dasel put -r toml '.grpc.address' -t string -v "0.0.0.0:9100" -f "$home_dir/config/app.toml"
    dasel put -r toml '.grpc-web.address' -t string -v "0.0.0.0:9101" -f "$home_dir/config/app.toml"
  init-metro.sh: |
    #!/bin/sh

    set -o errexit -o nounset

    metro init "$chainid" \
      --chain-id "$chainid" \
      --home "$home_dir"

    metro keys add "$validator_key_name" \
      --keyring-backend="$keyring_backend" \
      --home "$home_dir"

    validator_key=`metro keys show "$validator_key_name" -a --keyring-backend="$keyring_backend" --home "$home_dir"`
    metro add-genesis-account "$validator_key" "$coins" \
      --home "$home_dir"

    metro gentx "$validator_key_name" "$validator_stake" \
      --keyring-backend="$keyring_backend" \
      --chain-id "$chainid" \
      --orchestrator-address "$validator_key" \
      --evm-address "$evm_address" \
      --home "$home_dir"

    metro collect-gentxs \
      --home "$home_dir"
  start-metro.sh: |
    #!/bin/sh

    set -o errexit -o nounset

    # Start the celestia-app
    exec metro start --log_level="debug" --home "${home_dir}"
kind: ConfigMap
metadata:
  name: metro-scripts-6ct98th9g2
---
apiVersion: v1
data:
  chainid: test
  coins: 1000000000000000utia
  evm_address: 0x966e6f22781EF6a6A82BBB4DB3df8E225DfD9488
  home_dir: /home/celestia
  keyring_backend: test
  validator_key_name: validator
  validator_stake: 5000000000utia
kind: ConfigMap
metadata:
  name: sequencer-relayer-environment-celestia-config
---
apiVersion: v1
data:
  chainid: test
  coins: 1000000000000000utick
  evm_address: 0x966e6f22781EF6a6A82BBB4DB3df8E225DfD9488
  home_dir: /home/metro
  keyring_backend: test
  validator_key_name: validator
  validator_stake: 5000000000utick
kind: ConfigMap
metadata:
  name: sequencer-relayer-environment-metro-config
---
apiVersion: v1
kind: Service
metadata:
  name: sequencer-relayer-environment-service
spec:
  ports:
  - name: sequencer-svc
    port: 1318
    targetPort: sequencer-svc
  - name: bridge-svc
    port: 26659
    targetPort: bridge-svc
  selector:
    app: sequencer-relayer-environment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sequencer-relayer-environment
  name: sequencer-relayer-environment-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sequencer-relayer-environment
  template:
    metadata:
      labels:
        app: sequencer-relayer-environment
    spec:
      containers:
      - command:
        - /scripts/start-celestia-appd.sh
        envFrom:
        - configMapRef:
            name: sequencer-relayer-environment-celestia-config
        image: ghcr.io/astriaorg/celestia-app:v0.11.0
        name: celestia-app
        volumeMounts:
        - mountPath: /scripts/
          name: celestia-appd-scripts-volume
          readOnly: true
        - mountPath: /home/celestia
          name: celestia-home
      - command:
        - /scripts/start-bridge.sh
        envFrom:
        - configMapRef:
            name: sequencer-relayer-environment-celestia-config
        image: ghcr.io/astriaorg/celestia-node:test-sha-07fa3e7
        name: celestia-bridge
        ports:
        - containerPort: 26659
          name: bridge-svc
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /header/1
            port: bridge-svc
          periodSeconds: 10
        volumeMounts:
        - mountPath: /scripts/
          name: bridge-scripts-volume
          readOnly: true
        - mountPath: /home/celestia
          name: celestia-home
      - command:
        - /scripts/start-metro.sh
        envFrom:
        - configMapRef:
            name: sequencer-relayer-environment-metro-config
        image: ghcr.io/astriaorg/metro:0.0.2
        name: metro-sequencer
        ports:
        - containerPort: 1318
          name: sequencer-svc
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /cosmos/base/tendermint/v1beta1/blocks/latest
            port: sequencer-svc
          periodSeconds: 10
        volumeMounts:
        - mountPath: /scripts/
          name: metro-scripts-volume
          readOnly: true
        - mountPath: /home/metro
          name: metro-home
      initContainers:
      - command:
        - /scripts/init-celestia-appd.sh
        envFrom:
        - configMapRef:
            name: sequencer-relayer-environment-celestia-config
        image: ghcr.io/astriaorg/celestia-app:v0.11.0
        name: init-celestia-app
        volumeMounts:
        - mountPath: /scripts
          name: celestia-appd-scripts-volume
          readOnly: true
        - mountPath: /home/celestia
          name: celestia-home
      - command:
        - /scripts/init-bridge.sh
        envFrom:
        - configMapRef:
            name: sequencer-relayer-environment-celestia-config
        image: ghcr.io/astriaorg/celestia-node:test-sha-07fa3e7
        name: init-bridge
        volumeMounts:
        - mountPath: /scripts/
          name: bridge-scripts-volume
          readOnly: true
        - mountPath: /home/celestia
          name: celestia-home
      - command:
        - /scripts/init-metro.sh
        envFrom:
        - configMapRef:
            name: sequencer-relayer-environment-metro-config
        image: ghcr.io/astriaorg/metro:0.0.2
        name: init-metro
        volumeMounts:
        - mountPath: /scripts/
          name: metro-scripts-volume
          readOnly: true
        - mountPath: /home/metro
          name: metro-home
      - command:
        - /scripts/configure-metro.sh
        envFrom:
        - configMapRef:
            name: sequencer-relayer-environment-metro-config
        image: ghcr.io/tomwright/dasel:alpine
        name: configure-metro
        volumeMounts:
        - mountPath: /scripts/
          name: metro-scripts-volume
          readOnly: true
        - mountPath: /home/metro
          name: metro-home
      volumes:
      - configMap:
          defaultMode: 320
          name: bridge-scripts-tctfb6gktd
        name: bridge-scripts-volume
      - configMap:
          defaultMode: 320
          name: metro-scripts-6ct98th9g2
        name: metro-scripts-volume
      - configMap:
          defaultMode: 320
          name: celestia-appd-scripts-mgmh8g995k
        name: celestia-appd-scripts-volume
      - emptyDir: {}
        name: celestia-home
      - emptyDir: {}
        name: metro-home
