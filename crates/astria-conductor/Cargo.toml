[package]
name = "astria-conductor"
version = "2.0.0"
edition = "2021"
rust-version = "1.83.0"
license = "MIT OR Apache-2.0"
readme = "README.md"
repository = "https://github.com/astriaorg/astria"
homepage = "https://astria.org"

[dependencies]
astria-build-info = { path = "../astria-build-info", features = ["runtime"] }
astria-core = { path = "../astria-core", features = [
  "celestia",
  "client",
  "serde",
  "brotli",
] }
astria-eyre = { path = "../astria-eyre" }
config = { package = "astria-config", path = "../astria-config" }
merkle = { package = "astria-merkle", path = "../astria-merkle" }
sequencer-client = { package = "astria-sequencer-client", path = "../astria-sequencer-client", features = [
  "websocket",
] }
telemetry = { package = "astria-telemetry", path = "../astria-telemetry", features = [
  "display",
] }

base64 = { workspace = true }
bytes = { workspace = true }
futures = { workspace = true }
hex = { workspace = true }
indexmap = { workspace = true }
itertools = { workspace = true }
itoa = { workspace = true }
pbjson-types = { workspace = true }
pin-project-lite = { workspace = true }
prost = { workspace = true }
rand = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
sha2 = { workspace = true }
tendermint = { workspace = true }
tendermint-rpc = { workspace = true, features = ["http-client"] }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt-multi-thread", "signal"] }
tokio-util = { workspace = true, features = ["rt"] }
tonic = { workspace = true, features = ["tls", "tls-native-roots"] }
tower = { workspace = true, features = ["buffer", "limit"] }
tracing = { workspace = true, features = ["valuable"] }
tryhard = { workspace = true }

async-trait = "0.1.73"
futures-bounded = "0.2.3"
tokio-stream = "0.1.14"
moka = { version = "0.12.5", features = ["future"] }

### Celestia specific imports
#
# The crates imported here are all specific to eigerco's celestia APIs
# (including jsonrpsee).
# As none of them are reexported it is important to keep these in sync
# when updating.
#
# Even though jsonrpsee is a workspace dependency, it is set here with a
# concrete version because historically these did not necessarily to match.
# 
# The same can happen with tendermint, which is used for interacting with
# Astria and Celestia both. If there is a version mismatch, the version
# required for celestia needs to be imported under an alias.
celestia-rpc = "0.10.0"
# Alias import in case celestia lags behind upstream.
# tendermint = { version = "0.40.0" }
celestia-types = { workspace = true }
http = "1.2.0"
jsonrpsee = { version = "0.24.2", features = ["client-core", "macros"] }

[dev-dependencies]
astria-core = { path = "../astria-core", features = [
  "server",
  "test-utils",
  "unchecked-constructors",
] }
astria-grpc-mock = { path = "../astria-grpc-mock" }
config = { package = "astria-config", path = "../astria-config", features = [
  "tests",
] }

insta = { workspace = true, features = ["json"] }
wiremock = { workspace = true }

chrono = "0.4.35"
tokio-stream = { version = "0.1.15", features = ["net"] }
rand_chacha = "0.3.1"

[build-dependencies]
astria-build-info = { path = "../astria-build-info", features = ["build"] }
