syntax = "proto3";

package astria.sequencer.v1;

import "astria/primitive/v1/types.proto";

// `SignedTransaction` is a transaction that has been signed by the given public key.
// It wraps an `UnsignedTransaction` with a signature and public key.
message SignedTransaction {
    bytes signature = 1;
    bytes public_key = 2;
    UnsignedTransaction transaction = 3;
}

// `UnsignedTransaction` is a transaction that does not have an attached signature.
message UnsignedTransaction {
    uint32 nonce = 1;
    repeated Action actions = 2;
}

message Action {
    oneof value {
        Transfer transfer = 1;
        SecondaryAction secondary_action = 2;
    }   
}

// `AccountsTransaction` represents a value transfer transaction.
// Note: all values must be set (ie. not `None`), otherwise it will
// be considered invalid by the sequencer.
message Transfer {
    bytes to = 1;
    astria.primitive.v1.Uint128 amount = 2;
}

message SecondaryAction {
    bytes chain_id = 1;
    bytes data = 2;
}
