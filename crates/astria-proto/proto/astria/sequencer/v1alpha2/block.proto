syntax = "proto3";

package astria.sequencer.v1alpha2;

import "tendermint/types/types.proto";
import "astria/sequencer/v1alpha2/validation.proto";

// `RollupTransactions` are a sequence of opaque bytes together with the human
// readable `chain_id` of the rollup they belong to.
//
// The binary encoding is understood as an implementation detail of the
// services sending and receiving the transactions.
message RollupTransactions {
    // The human readable name of the rollup these transactions belong to.
    string chain_id = 1;
    // The serialized opaque bytes of the rollup transactions.
    repeated bytes transactions = 2;
}

// `SequencerBlock` is constructed from a tendermint/cometbft block by
// converting its opaque `data` bytes into sequencer specific types.
message SequencerBlock {
    // The hash of the sequencer block. Must be 32 bytes.
    bytes block_hash = 1;
    // The original cometbft header that was the input to this sequencer block.
    tendermint.types.Header header = 2;
    // The commit/set of signatures that commited this block.
    tendermint.types.Commit last_commit = 3;
    // The collection of rollup transactions that were included in this block.
    RollupTransactions rollup_transactions = 4;
    // The root of the action tree of this block.
    bytes action_tree_root = 5;
    // The proof that the action tree root was included in `header.data_hash`.
    astria.sequencer.v1alpha2.InclusionProof action_tree_inclusion_proof = 6;
}
