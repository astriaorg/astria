[package]
name = "astria-sequencer-relayer"
version = "0.9.1"
edition = "2021"
license = "MIT OR Apache-2.0"
rust-version = "1.73"

[dependencies]
dirs = "5.0"
http = "0.2.9"
serde_path_to_error = "0.1.13"
zeroize = { version = "1.6.0", features = ["zeroize_derive"] }

axum = { workspace = true }
backon = { workspace = true }
base64 = { workspace = true }
base64-serde = { workspace = true }
ed25519-consensus = { workspace = true }
eyre = { workspace = true }
futures = { workspace = true }
hex = { workspace = true, features = ["serde"] }
humantime = { workspace = true }
hyper = { workspace = true }
prost = { workspace = true }
reqwest = { workspace = true, features = ["json"] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
sha2 = { workspace = true }
tendermint = { workspace = true, features = ["rust-crypto"] }
tendermint-config = { workspace = true }
tendermint-rpc = { workspace = true, features = ["http-client"] }
tracing = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }

astria-core = { path = "../astria-core" }
celestia-client = { package = "astria-celestia-client", path = "../astria-celestia-client" }
config = { package = "astria-config", path = "../astria-config" }
sequencer-client = { package = "astria-sequencer-client", path = "../astria-sequencer-client", features = [
  "http",
] }
telemetry = { package = "astria-telemetry", path = "../astria-telemetry" }

[dev-dependencies]
celestia-mock = { package = "astria-celestia-mock", path = "../astria-celestia-mock" }
config = { package = "astria-config", path = "../astria-config", features = [
  "tests",
] }
astria-core = { path = "../astria-core", features = ["test-utils"] }
merkle = { package = "astria-merkle", path = "../astria-merkle" }
rand_core = { version = "0.6", features = ["getrandom"] }

jsonrpsee = { workspace = true, features = ["server"] }
once_cell = { workspace = true }
tempfile = { workspace = true }
tokio = { workspace = true, features = ["test-util"] }
wiremock = { workspace = true }
