[package]
name = "astria-sequencer-relayer"
version = "1.0.1"
edition = "2021"
license = "MIT OR Apache-2.0"
rust-version = "1.83.0"
readme = "README.md"
repository = "https://github.com/astriaorg/astria"
homepage = "https://astria.org"

[dependencies]
bech32 = "0.11.0"
http = "0.2.9"
k256 = "0.13.3"
serde_path_to_error = "0.1.13"

axum = { workspace = true }
base64 = { workspace = true }
base64-serde = { workspace = true }
celestia-types = { workspace = true }
const_format = { workspace = true }
futures = { workspace = true }
hex = { workspace = true, features = ["serde"] }
hyper = { workspace = true }
itoa = { workspace = true }
jiff = { workspace = true, features = ["serde"] }
pbjson-types = { workspace = true }
pin-project-lite = { workspace = true }
prost = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
sha2 = { workspace = true }
tendermint = { workspace = true, features = ["secp256k1"] }
tendermint-config = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
tryhard = { workspace = true }
tokio = { workspace = true, features = [
  "fs",
  "macros",
  "rt-multi-thread",
  "signal",
] }
tokio-stream = { workspace = true }
tokio-util = { workspace = true }
tonic = { workspace = true }

astria-build-info = { path = "../astria-build-info", features = ["runtime"] }
astria-core = { path = "../astria-core", features = [
  "celestia",
  "client",
  "serde",
  "brotli",
] }
astria-eyre = { path = "../astria-eyre" }
config = { package = "astria-config", path = "../astria-config" }
sequencer-client = { package = "astria-sequencer-client", path = "../astria-sequencer-client", features = [
  "http",
] }
telemetry = { package = "astria-telemetry", path = "../astria-telemetry", features = [
  "display",
] }

[dev-dependencies]
astria-grpc-mock = { path = "../astria-grpc-mock" }
config = { package = "astria-config", path = "../astria-config", features = [
  "tests",
] }
astria-core = { path = "../astria-core", features = ["test-utils", "server"] }

async-trait = { workspace = true }
celestia-tendermint = { workspace = true }
celestia-types = { workspace = true }
hyper = { workspace = true }
itertools = { workspace = true }
rand_core = { version = "0.6", features = ["getrandom"] }
tempfile = { workspace = true }
tendermint-rpc = { workspace = true, features = ["http-client"] }
tokio = { workspace = true, features = ["test-util"] }
tokio-stream = { workspace = true, features = ["net"] }
wiremock = { workspace = true }

assert-json-diff = "2.0.2"
http = "0.2.7"
isahc = { version = "1.7.2", features = ["json"] }
tower = { version = "0.4.13" }
tokio-test.workspace = true
rand_chacha = "0.3.1"

[build-dependencies]
astria-build-info = { path = "../astria-build-info", features = ["build"] }

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
  'cfg(dylint_lib, values("tracing_debug_field"))',
] }
