# A list of filter directives of the form target[span{field=value}]=level.
ASTRIA_SEQUENCER_RELAYER_LOG=astria_sequencer_relayer=info

# If true disables writing to the opentelemetry OTLP endpoint.
ASTRIA_SEQUENCER_RELAYER_NO_OTEL=false

# If true disables tty detection and forces writing telemetry to stdout.
# If false span data is written to stdout only if it is connected to a tty.
ASTRIA_SEQUENCER_RELAYER_FORCE_STDOUT=false

# If true uses an exceedingly pretty human readable format to write to stdout.
# If false uses JSON formatted OTEL traces.
# This does nothing unless stdout is connected to a tty or
# `ASTRIA_SEQUENCER_RELAYER_FORCE_STDOUT` is set to `true`.
ASTRIA_SEQUENCER_RELAYER_PRETTY_PRINT=false

# If set to any non-empty value removes ANSI escape characters from the pretty
# printed output. Note that this does nothing unless
# `ASTRIA_SEQUENCER_RELAYER_PRETTY_PRINT` is set to `true`.
NO_COLOR=

# Address of cometbft/tendermint to request new block heights.
# 127.0.0.1:26657 is the default socket address at which cometbft
# serves RPCs.
ASTRIA_SEQUENCER_RELAYER_COMETBFT_ENDPOINT="http://127.0.0.1:26657"

# Address of sequencer application gRPC service for requesting new blocks.
# 127.0.0.1:8080 is the default socket address for its gRPC server.
ASTRIA_SEQUENCER_RELAYER_SEQUENCER_GRPC_ENDPOINT="http://127.0.0.1:8080"

# Address at which celestia app serves gRPCs.
# 127.0.0.1:9090 is the default socket address for its gRPC server.
ASTRIA_SEQUENCER_RELAYER_CELESTIA_APP_GRPC_ENDPOINT="http://127.0.0.1:9090"

# The path to the file storing the signing key used to sign blob submissions to the celestia app.
# The file should be a hex-encoded secp256k1 secret key, such as could be output via
# `celestia-appd keys export <keyname> --keyring-backend=... --home=... --unsafe --unarmored-hex`,
# not a keyfile generated by celestia app.
ASTRIA_SEQUENCER_RELAYER_CELESTIA_APP_KEY_FILE=/path/to/priv_celestia_key.json

# The duration in milliseconds that sequencer-relayer sleeps before
# requesting a new block from sequencer.
ASTRIA_SEQUENCER_RELAYER_BLOCK_TIME=1000

# Set to true to only relay blocks proposed by the validator key in `ASTRIA_SEQUENCER_RELAYER_VALIDATOR_KEY_FILE`.
ASTRIA_SEQUENCER_RELAYER_RELAY_ONLY_VALIDATOR_KEY_BLOCKS=false

# A comma-separated list of base64-encoded rollup IDs, often the sha256
# hash of a rollup name.
# Only data from these rollups will be submitted to Celestia.
# If empty, no filtering will be applied, i.e. data from all
# rollups will be submitted.
# Example for only submitting transactions for rollups of the provided IDs:
# ASTRIA_SEQUENCER_RELAYER_ONLY_INCLUDE_ROLLUPS=AQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobHB0eHyA=,IB8eHRwbGhkYFxYVFBMSERAPDg0MCwoJCAcGBQQDAgE=
ASTRIA_SEQUENCER_RELAYER_ONLY_INCLUDE_ROLLUPS=

# The path to the file storing the cometbft validator key.
# Used to sign data before submitting it to celestia.
# Ignored if `ASTRIA_SEQUENCER_RELAYER_RELAY_ONLY_VALIDATOR_KEY_BLOCKS=false`.
ASTRIA_SEQUENCER_RELAYER_VALIDATOR_KEY_FILE=.cometbft/config/priv_validator_key.json

# The socket address at which sequencer relayer will server healthz, readyz, and status calls.
ASTRIA_SEQUENCER_RELAYER_API_ADDR=127.0.0.1:2450

# The path to which relayer will write its state prior to submitting to Celestia.
# A file must exist at this path, be readable and writable, and contain one of:
# 1. {"state": "ignore"}
#    to ignore the pre-submit state entirely and only consider the object stored in
#    ASTRIA_SEQUENCER_RELAYER_POST_SUBMIT_PATH.
# 2. {"state": "started", "last_submission": <post_submission_state> }
#    which is usually only written by sequencer-relayer during normal operation and
#    is checked for consistency with ASTRIA_SEQUENCER_RELAYER_POST_SUBMIT_PATH at startup.
ASTRIA_SEQUENCER_RELAYER_PRE_SUBMIT_PATH=/path/to/presubmit.json

# The path to which relayer will write its state after submitting to Celestia.
# A file must exist at this path, be readable and writable, and contain one of:
# 1. {"state": "fresh"}
#    for relaying sequencer blocks starting at sequencer height 1.
# 2. {"state": "submitted", "celestia_height": <number>, "sequencer_height": <number>}}
#    for relaying blocks starting at `<number> + 1`.
ASTRIA_SEQUENCER_RELAYER_POST_SUBMIT_PATH=/path/to/postsubmit.json

# Set to true to enable prometheus metrics.
ASTRIA_SEQUENCER_RELAYER_NO_METRICS=true

# The address at which the prometheus HTTP listener will bind if enabled.
ASTRIA_SEQUENCER_RELAYER_METRICS_HTTP_LISTENER_ADDR="127.0.0.1:9000"

# The OTEL specific config options follow the OpenTelemetry Protocol Exporter v1
# specification as defined here:
# https://github.com/open-telemetry/opentelemetry-specification/blob/e94af89e3d0c01de30127a0f423e912f6cda7bed/specification/protocol/exporter.md

# Sets the general OTLP endpoint.
OTEL_EXPORTER_OTLP_ENDPOINT="http://localhost:4317"
# Sets the OTLP endpoint for trace data. This takes precedence over `OTEL_EXPORTER_OTLP_ENDPOINT` if set.
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT="http://localhost:4317/v1/traces"
# The duration in seconds that the OTEL exporter will wait for each batch export.
OTEL_EXPORTER_OTLP_TRACES_TIMEOUT=10
# The compression format to use for exporting. Only `"gzip"` is supported.
# Don't set the env var if no compression is required.
OTEL_EXPORTER_OTLP_TRACES_COMPRESSION="gzip"
# The HTTP headers that will be set when sending gRPC requests.
OTEL_EXPORTER_OTLP_HEADERS="key1=value1,key2=value2"
# The HTTP headers that will be set when sending gRPC requests. This takes precedence over `OTEL_EXPORTER_OTLP_HEADERS` if set.
OTEL_EXPORTER_OTLP_TRACE_HEADERS="key1=value1,key2=value2"
