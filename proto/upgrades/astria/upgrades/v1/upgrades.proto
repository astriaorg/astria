syntax = "proto3";

package astria.upgrades.v1;

import "connect/marketmap/v2/genesis.proto";
import "connect/oracle/v2/genesis.proto";

// A JSON-encoded form of this message is used as the upgrades file for the Sequencer.
message Upgrades {
  Aspen aspen = 1;
  Blackburn blackburn = 2;
}

// Info specific to a given upgrade.
//
// All upgrades have this info at a minimum.
message BaseUpgradeInfo {
  // The upgrade should be applied during the lifecycle of the block at this height.
  uint64 activation_height = 1;
  // The app version running after the upgrade is applied.
  uint64 app_version = 2;
}

// Aspen upgrade of the Sequencer network.
message Aspen {
  message PriceFeedChange {
    // The price feed market map genesis data.
    connect.marketmap.v2.GenesisState market_map_genesis = 1;
    // The price feed oracle genesis data.
    connect.oracle.v2.GenesisState oracle_genesis = 2;
  }

  message ValidatorUpdateActionChange {}

  message IbcAcknowledgementFailureChange {}

  BaseUpgradeInfo base_info = 1;
  PriceFeedChange price_feed_change = 2;
  ValidatorUpdateActionChange validator_update_action_change = 3;
  IbcAcknowledgementFailureChange ibc_acknowledgement_failure_change = 4;
}

// Blackburn upgrade of the Sequencer network.
message Blackburn {
  message Ics20TransferActionChange {}
  message AllowIbcRelayToFail {}

  BaseUpgradeInfo base_info = 1;
  Ics20TransferActionChange ics20_transfer_action_change = 2;
  AllowIbcRelayToFail allow_ibc_relay_to_fail = 3;
}
