syntax = "proto3";

package astria_vendored.tendermint.abci;

import "astria_vendored/tendermint/crypto/keys.proto";

// This file contains types which are copied from the cosmossdk tendermint types
// if we update the version of cometbft being used it may need to be updated.

// The types here are copied from the cometbft commit matching the penumbra types
// of this penumbra version: https://buf.build/penumbra-zone/penumbra/deps/bc443669626d4a7b823f588d95c9a528
// This corresponds to the cosmos types here: https://buf.build/cosmos/cosmos-sdk/docs/e7a85cef453e4b999ad9aff8714ae05f

// We are copying the bare minimum of types required for use with our own types
// this is done to avoid importing the entire cometbft types package, and proto
// registration issues that may cause in dependent chains which also import
// the cometbft types.

message ValidatorUpdate {
  astria_vendored.tendermint.crypto.PublicKey pub_key = 1;
  int64 power = 2;
}

message ExtendedCommitInfo {
	// The round at which the block proposer decided in the previous height.
	int32 round = 1;
	// List of validators' addresses in the last validator set with their voting
	// information, including vote extensions.
	repeated ExtendedVoteInfo votes = 2;
}

message ExtendedVoteInfo {
	// The validator that sent the vote.
	Validator validator = 1;
	// Non-deterministic extension provided by the sending validator's application.
	bytes vote_extension = 3;
	// Vote extension signature created by CometBFT
	bytes extension_signature = 4;
	// block_id_flag indicates whether the validator voted for a block, nil, or did not vote at all
	BlockIDFlag block_id_flag = 5;
}
message Validator {
	bytes address = 1;
	int64 power = 3;
}

enum BlockIDFlag {
	BLOCK_ID_FLAG_UNKNOWN = 0;
	BLOCK_ID_FLAG_ABSENT = 1;
	BLOCK_ID_FLAG_COMMIT = 2;
	BLOCK_ID_FLAG_NIL = 3;
}

