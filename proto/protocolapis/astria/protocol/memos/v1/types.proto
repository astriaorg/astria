// Memo types that are intended to only be serialized as plaintext JSON and encoded
// as binary/protobuf. The intent is to follow the IBC convention of keeping memos as
// JSON. The specific JSON formatting should follows the pbjson mapping.
//
// XXX: Different from protobuf any changes in the field names is protocol breaking,
//      because these messages are serialized as plaintext JSON.

syntax = "proto3";

package astria.protocol.memos.v1;

// Memo for an ICS20 withdrawal from the rollup which is sent to
// an external IBC-enabled chain.
message Ics20WithdrawalFromRollup {
  // The block number on the rollup that triggered the transaction underlying
  // this ics20 withdrawal memo.
  uint64 rollup_block_number = 1;
  // An identifier of the original rollup withdrawal event that triggered this ics20
  // withdrawal and that is underlying this bridge unlock memo. For general EVM
  // this is typically a transaction hash.
  //
  // This field is of type `string` so that it can be formatted in the preferred
  // format of the rollup when targeting plain text encoding.
  string rollup_withdrawal_event_id = 2;
  // The return address on the rollup to which funds should returned in case of
  // failure. This field exists so that the rollup can identify which account
  // the returned funds originated from.
  //
  // This field is of type `string` so that it can be formatted in the preferred
  // format of the rollup when targeting plain text encoding.
  string rollup_return_address = 3;
  // A field that can be populated by the rollup. It is assumed that this field
  // will be consumed by the downstream chain.
  string memo = 4;
}

// Memo for an ICS20 transfer to Astria which is sent to a
// bridge account, which will then be deposited into the rollup.
message Ics20TransferDeposit {
  // The destination address for the deposit on the rollup.
  //
  // This field is of type `string` so that it can be formatted in the preferred
  // format of the rollup when targeting plain text encoding.
  string rollup_deposit_address = 1;
}
