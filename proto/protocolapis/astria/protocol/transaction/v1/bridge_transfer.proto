syntax = "proto3";

package astria.protocol.transaction.v1;

import "astria/primitive/v1/address.proto";
import "astria/primitive/v1/uint128.proto";

message BridgeTransfer {
  // the address of the bridge account to transfer to
  astria.primitive.v1.Address to = 1;
  // the amount to transfer
  astria.primitive.v1.Uint128 amount = 2;
  // the asset used to pay the transaction fee
  string fee_asset = 3;
  // the address on the destination chain which
  // will receive the bridged funds
  string destination_chain_address = 4;
  // the address of the bridge account to transfer from
  astria.primitive.v1.Address bridge_address = 5;
  // The block number on the rollup that triggered this transfer.
  uint64 rollup_block_number = 6;
  // An identifier of the original rollup event, such as a transaction hash which
  // triggered a bridge unlock and is underlying event that led to this bridge
  // unlock. This can be utilized for tracing from the bridge back to
  // distinct rollup events.
  //
  // This field is of type `string` so that it can be formatted in the preferred
  // format of the rollup when targeting plain text encoding.
  string rollup_withdrawal_event_id = 7;
}
