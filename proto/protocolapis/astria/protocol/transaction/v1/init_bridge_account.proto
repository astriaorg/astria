syntax = "proto3";

package astria.protocol.transaction.v1;

import "astria/primitive/v1/address.proto";
import "astria/primitive/v1/rollup_id.proto";

// `InitBridgeAccount` represents a transaction that initializes
// a bridge account for the given rollup on the chain.
//
// The sender of the transaction is used as the owner of the bridge account
// and is the only actor authorized to transfer out of this account via
// a `Transfer`.
message InitBridgeAccount {
  // the rollup ID to register with the bridge account (the tx sender)
  astria.primitive.v1.RollupId rollup_id = 1;
  // the asset ID accepted as an incoming transfer by the bridge account
  string asset = 2;
  // the asset used to pay the transaction fee
  string fee_asset = 3;
  // the address corresponding to the key which has sudo capabilities;
  // ie. can change the sudo and withdrawer addresses for this bridge account.
  // if this is empty, the sender of the transaction is used.
  astria.primitive.v1.Address sudo_address = 4;
  // the address corresponding to the key which can withdraw funds from this bridge account.
  // if this is empty, the sender of the transaction is used.
  astria.primitive.v1.Address withdrawer_address = 5;
}
