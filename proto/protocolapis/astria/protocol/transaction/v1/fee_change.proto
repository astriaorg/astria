syntax = "proto3";

package astria.protocol.transaction.v1;

import "astria/protocol/fees/v1/fee_components.proto";

message FeeChange {
  // the new fee components values
  oneof fee_components {
    astria.protocol.fees.v1.BridgeLockFeeComponents bridge_lock = 1;
    astria.protocol.fees.v1.BridgeSudoChangeFeeComponents bridge_sudo_change = 2;
    astria.protocol.fees.v1.BridgeUnlockFeeComponents bridge_unlock = 3;
    astria.protocol.fees.v1.FeeAssetChangeFeeComponents fee_asset_change = 4;
    astria.protocol.fees.v1.FeeChangeFeeComponents fee_change = 5;
    astria.protocol.fees.v1.IbcRelayFeeComponents ibc_relay = 7;
    astria.protocol.fees.v1.IbcRelayerChangeFeeComponents ibc_relayer_change = 6;
    astria.protocol.fees.v1.IbcSudoChangeFeeComponents ibc_sudo_change = 8;
    astria.protocol.fees.v1.Ics20WithdrawalFeeComponents ics20_withdrawal = 9;
    astria.protocol.fees.v1.InitBridgeAccountFeeComponents init_bridge_account = 10;
    astria.protocol.fees.v1.RollupDataSubmissionFeeComponents rollup_data_submission = 11;
    astria.protocol.fees.v1.SudoAddressChangeFeeComponents sudo_address_change = 12;
    astria.protocol.fees.v1.TransferFeeComponents transfer = 13;
    astria.protocol.fees.v1.ValidatorUpdateFeeComponents validator_update = 14;
    astria.protocol.fees.v1.BridgeTransferFeeComponents bridge_transfer = 15;
    astria.protocol.fees.v1.RecoverIbcClientFeeComponents recover_ibc_client = 16;
  }
}
