# Default values for sequencer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  namespaceOverride: ""
  replicaCount: 1
  # Whether to use tty readable logging for astria services, when false use json.
  # Best to be false in production environments, true for clean logs on local dev.
  useTTY: true
  dev: false
  # Supported options are `custom`, `mainnet`, `dawn-1`, or `dusk-11`.
  # When set to a specific network, there are default values for some
  # values which are used and cannot be changed.
  network: "custom"

# sequencer core images
images:
  sequencerRelayer:
    repo: ghcr.io/astriaorg/sequencer-relayer
    pullPolicy: IfNotPresent
    # Only used when global.dev is true OR global.network is set to `custom`
    tag: latest

config:
  relayer:
    # only configurable in custom network
    sequencerChainId: ""
    # only configurable in custom network
    celestiaChainId: ""
    celestiaAppGrpc: ""
    cometbftRpc: ""
    sequencerGrpc: ""
    onlyIncludeRollups: ""
    celestiaDefaultMinGasPrice: "0.002"
    # Only used when global.network is set to `custom` or global.dev is true
    blockTimeMs: "1000"

    metrics:
      enabled: false

  celestiaAppPrivateKey:
    devContent: ""
    secret:
      filename: "key.hex"
      resourceName: "projects/$PROJECT_ID/secrets/celestiaPrivateKey/versions/latest"

otel:
  enabled: false
  serviceName: "astria-sequencer-relayer"
  endpoint: ""
  tracesEndpoint: ""
  tracesCompression: gzip
  tracesTimeout: "10"
  otlpHeaders: ""
  traceHeaders: ""

ports:
  healthAPI: 2450
  metrics: 9000

serviceMonitor:
  enabled: false
  port: 26660
  additionalLabels:
    release: kube-prometheus-stack

# Alerting Configuration
alerting:
  enabled: false
  interval: ""
  additionalLabels:
    release: kube-prometheus-stack
  annotations: {}
  # scrapeTimeout: 10s
  # path: /metrics
  prometheusRule:
    enabled: true
    additionalLabels:
      release: kube-prometheus-stack
    namespace: monitoring
    rules:
    - alert: Sequencer_Relayer_Down
      expr: up{container="sequencer-relayer"} == 0  # Insert your query Expression
      for: 1m  # Rough number but should be enough to init warn
      labels:
        severity: warning
      annotations:
        summary: Sequencer Relayer is Down (instance {{ $labels.instance }})
        description: "Sequencer relayer '{{ $labels.namespace }}' has disappeared from Prometheus target discovery.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

storage:
  enabled: false
  local: true
  entities:
    sequencerRelayerStorage:
      size: "1Gi"
      persistentVolumeName: "sequencer-relayer-storage"
      path: "/data/sequencer-relayer-data"

# When deploying in a production environment should use a secret provider
# This is configured for use with GCP, need to set own resource names
# and keys
secretProvider:
  enabled: false
  provider: gcp
  # May need to update this template to match the secret provider
  # it will be passed an object containing:
  # {
  #   key: {
  #     resourceName: <resourceName>,
  #     filename: <filename>,
  #     key: <key>
  #   }
  # }
  #
  # Can update set the source of each chain key at chain.<chain>.key.secret to
  # match the secret provider's requirements. The default works for GCP.
  # The secret file must be mapped to the <key.filename>
  parametersTemplate: |-
    secrets: |
      - resourceName: {{ .key.resourceName }}
        fileName: "{{ .key.filename }}"
