apiVersion: apps/v1
kind: Deployment
metadata:
  name: indexer
  labels:
    app: indexer
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.global.replicaCount }}
  selector:
    matchLabels:
     app: indexer
  template:
    metadata:
      labels:
       app: indexer
    spec:
      containers:
        - name: indexer
          image: ghcr.io/astriaorg/astria-indexer:0.1.0
          envFrom:
            - configMapRef:
                name: env
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.global.namespace }}
  labels:
    app: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: ghcr.io/astriaorg/astria-indexer-api:0.1.0
          envFrom:
            - configMapRef:
                name: env
          ports:
            - containerPort: 9876
              name: indexer-api
              protocol: TCP
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.global.namespace }}
  labels:
   app: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
     app: db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
       app: db
    spec:
      containers:
        - args:
            - -cshared_preload_libraries=timescaledb,pg_stat_statements
            - -cpg_stat_statements.track=all
          env:
            - name: POSTGRES_DB
              value: astria
            - name: POSTGRES_HOST
              value: db-service
            - name: POSTGRES_HOST_AUTH_METHOD
              value: trust
            - name: POSTGRES_PASSWORD
              value: indexer-user
            - name: POSTGRES_USER
              value: indexer-user
          image: timescale/timescaledb-ha:pg15-latest
          livenessProbe:
            exec:
              command:
                - pg_isready -U  -d astria
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: db
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /home/postgres/pgdata
              name: db
      restartPolicy: Always
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: astrotrek-shared-local-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.global.namespace }}
  labels:
   app: frontend
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
     app: frontend
  template:
    metadata:
      labels:
       app: frontend
    spec:
      containers:
        - args:
            - npm
            - run
            - start
          env:
            - name: NUXT_PUBLIC_API_DEV
              value: "http://api.sequencer.localdev.me/v1"
            - name: NUXT_PUBLIC_WSS_DEV
              value: "ws://api.sequencer.localdev.me/v1/ws"
          image: ghcr.io/astriaorg/astrotrek:0.1.0
          name: frontend
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
      restartPolicy: Always
