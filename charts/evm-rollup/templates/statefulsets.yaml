apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "rollup.name" . }}-geth
  labels:
    app: {{ include "rollup.appName" . }}
  namespace: {{ include "rollup.namespace" . }}
spec:
  replicas : {{ .Values.global.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "rollup.appName" . }}
  template:
    metadata:
      name: {{ include "rollup.name" . }}-execution-chain
      labels:
        app: {{ include "rollup.appName" . }}
    spec:
      initContainers:
        {{- if .Values.geth.snapshot.restore.enabled }}
        - name: restore-snapshot
          image: {{ .Values.images.snapshot.repo }}:{{ .Values.images.snapshot.tag }}
          imagePullPolicy: {{ .Values.images.snapshot.pullPolicy }}
          command: [ "/scripts/restore-snapshot.sh" ]
          envFrom:
            - configMapRef:
                name: {{ include "rollup.name" . }}-geth-env
          volumeMounts:
            {{- if .Values.geth.snapshot.restore.enabled }}
            - mountPath: /root/.config/rclone/
              name: {{ include "rollup.name" . }}-rclone-config-volume
            {{- end }}
            - mountPath: /scripts/
              name: {{ include "rollup.name" . }}-executor-scripts-volume
            - mountPath: /home/geth
              name: {{ include "rollup.name" $ }}-rollup-shared-storage-vol
              subPath: {{ include "rollup.name" . }}/executor
        {{- end }}
        {{- if .Values.geth.purgeMempool }}
        - name: purge-mempool
          image: {{ include "rollup.image" . }}
          imagePullPolicy: {{ .Values.images.geth.pullPolicy }}
          command: [ "sh", "-c", "rm" ]
          args:
            - -f
            - {{ include "rollup.gethDataDir" . }}/geth/transactions.rlp
          volumeMounts:
            - mountPath: /home/geth
              name: {{ include "rollup.name" $ }}-rollup-shared-storage-vol
              subPath: {{ include "rollup.name" . }}/executor
        {{- end }}
        - name: init-geth
          command: [ "/scripts/init-geth.sh" ]
          image: {{ include "rollup.image" . }}
          imagePullPolicy: {{ .Values.images.geth.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "rollup.name" . }}-geth-env
          volumeMounts:
            - mountPath: /scripts/
              name: {{ include "rollup.name" . }}-executor-scripts-volume
            - mountPath: /home/geth
              name: {{ include "rollup.name" $ }}-rollup-shared-storage-vol
              subPath: {{ include "rollup.name" . }}/executor
      containers:
        - name: geth
          command: [ "geth" ]
          args:
            - --networkid={{ include "rollup.networkId" . }}
            {{- if .Values.geth.configToml }}
            - --config={{ include "rollup.gethHomeDir" . }}/config.toml
            {{- end }}
            {{- range $name, $arg := .Values.geth.flags }}
            {{- $noCondition := not (hasKey $arg "condition") }}
            {{- if or ($noCondition) (eq (tpl $arg.condition $) "true") }}
            - --{{ $name }}{{ if $arg.value }}={{ tpl $arg.value $ }}{{ end }}
            {{- end }}
            {{- end }}
          image: {{ include "rollup.image" . }}
          imagePullPolicy: {{ .Values.images.geth.pullPolicy }}
          volumeMounts:
            - mountPath: /scripts/
              name: {{ include "rollup.name" . }}-executor-scripts-volume
              readOnly: true
            - mountPath: /home/geth
              name: {{ include "rollup.name" . }}-rollup-shared-storage-vol
              subPath: {{ include "rollup.name" . }}/executor
          ports:
            - containerPort: {{ .Values.ports.jsonRPC }}
              name: json-rpc
            - containerPort: {{ .Values.ports.wsRPC }}
              name: ws-rpc
            - containerPort: {{ .Values.ports.executionGRPC }}
              name: execution-grpc
            {{- if .Values.geth.p2p.enabled }}
            - containerPort: {{ .Values.ports.p2p }}
              name: tcp-p2p
              protocol: TCP
            - containerPort: {{ .Values.ports.p2p }}
              name: udp-p2p
              protocol: UDP
            {{- end }}
            {{- if .Values.metrics.enabled }}
            - containerPort: {{ .Values.ports.metrics }}
              name: geth-metr
            {{- end }}
          resources:
            {{- toYaml .Values.resources.geth | trim | nindent 12 }}
        - name: conductor
          image: {{ include "conductor.image" . }}
          imagePullPolicy: {{ .Values.images.conductor.pullPolicy }}
          command: [ "/usr/local/bin/astria-conductor" ]
          stdin: {{ .Values.global.useTTY }}
          tty: {{ .Values.global.useTTY }}
          envFrom:
            - configMapRef:
                name: {{ include "rollup.name" . }}-conductor-env
          resources:
            {{- toYaml .Values.resources.conductor | trim | nindent 12 }}
          {{- if .Values.metrics.enabled }}
          ports:
            - containerPort: {{ .Values.ports.conductorMetrics }}
              name: conductor-metr
          {{- end }}
      volumes:
        {{- if .Values.geth.snapshot.restore.enabled }}
        - name: {{ include "rollup.name" . }}-rclone-config-volume
          {{- if .Values.secretProvider.enabled }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "rollup.name" . }}-secrets-rclone
          {{- else }}
          configMap:
            name: {{ include "rollup.name" . }}-rclone-config
          {{- end }}
        {{- end }}
        - name: {{ include "rollup.name" . }}-executor-scripts-volume
          configMap:
            name: {{ include "rollup.name" . }}-executor-scripts
            defaultMode: 0500
        - name: {{ include "rollup.name" $ }}-rollup-shared-storage-vol
          {{- if .Values.storage.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "rollup.name" $ }}-rollup-shared-storage-pvc-geth
          {{- else }}
          emptyDir: {}
          {{- end }}
---
