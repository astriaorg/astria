global:
  namespaceOverride: ""
  replicaCount: 1
  # Whether to use tty readable logging for astria services, when false use json.
  useTTY: false
  dev: false

images:
  composer:
    repo: ghcr.io/astriaorg/composer
    pullPolicy: IfNotPresent
    tag: 1.0.1
    devTag: latest

config:
  logLevel: "debug"
  maxBytesPerBundle: 200000
  bundleQueueCapacity: 40000
  maxSubmitInterval: 2000
  sequencerAddressPrefix: astria
  sequencerNativeAssetBaseDenomination: "nria"
  sequencerRpc: ""
  sequencerGrpc: ""
  sequencerChainId: ""
  privateKey:
    devContent: ""
    secret:
      filename: "key.hex"
      resourceName: "projects/$PROJECT_ID/secrets/sequencerPrivateKey/versions/latest"
  rollups:
    - name: "astria"
      wsRpc: "ws://"

otel:
  enabled: false
  serviceName: "composer"
  endpoint: ""
  tracesEndpoint: ""
  tracesCompression: "gzip"
  tracesTimeout: "10"
  otlpHeaders: ""
  traceHeaders: ""

metrics:
  enabled: false

serviceMonitor:
  # set to enable port svc and service monitor
  enabled: false
  port: 6060
  additionalLabels:
    release: kube-prometheus-stack

alerting:
  enabled: false
  interval: ""
  additionalLabels:
    release: kube-prometheus-stack
  annotations: {}
  # scrapeTimeout: 10s
  # path: /metrics
  prometheusRule:
    enabled: true
    additionalLabels:
      release: kube-prometheus-stack
    namespace: monitoring
    rules:
    - alert: Composer_Node_Down
      expr: up{container="composer"} == 0  # Insert your query Expression
      for: 1m  # Rough number but should be enough to init warn
      labels:
        severity: warning
      annotations:
        summary: Composer is Down (instance {{ $labels.instance }})
        description: "composer node '{{ $labels.namespace }}' has disappeared from Prometheus target discovery.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

# When deploying in a production environment should use a secret provider
# This is configured for use with GCP, need to set own resource names
# and keys
secretProvider:
  enabled: false
  provider: gcp
  parametersTemplate: |-
    secrets: |
      - resourceName: {{ .key.resourceName }}
        fileName: "{{ .key.filename }}"

resources:
  requests:
    cpu: 100m
    memory: 100Mi
  limits:
    cpu: 1000m
    memory: 1Gi

# Default service ports
ports:
  grpc: 50052
  healthApi: 2450
  metrics: 6060
