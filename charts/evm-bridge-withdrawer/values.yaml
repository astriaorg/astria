# Default values for sequencer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  namespaceOverride: ""
  serviceName: "local"
  replicaCount: 1
  useTTY: true
  dev: false

# sequencer core images
images:
  evmBridgeWithdrawer:
    repo: ghcr.io/astriaorg/evm-bridge-withdrawer
    pullPolicy: IfNotPresent
    tag: 1.0.2
    devTag: latest

config:
  sequencerGrpcEndpoint: ""
  sequencerCometbftEndpoint: ""
  sequencerChainId: ""
  sequencerAddressPrefix: "astria"
  sequencerBridgeAddress: ""
  useCompatAddress: "false"
  feeAssetDenom: ""
  minExpectedFeeAssetBalance: "1000000"
  rollupAssetDenom: ""
  evmContractAddress: "0x"
  evmRpcEndpoint: ""
  noFrostThresholdSigning: "true"
  frostMinSigners: "0"
  frostPublicKeyPackagePath: ""
  frostParticipantEndpoints: ""
  sequencerPrivateKey:
    devContent: ""
    secret:
      filename: "key.hex"
      resourceName: "projects/$PROJECT_ID/secrets/celestiaPrivateKey/versions/latest"
ports:
  healthAPI: 2450
  metrics: 9000

metrics:
  enabled: false

otel:
  enabled: false
  serviceName: "astria-evm-withdrawer"
  endpoint: ""
  tracesEndpoint: ""
  tracesCompression: gzip
  tracesTimeout: "10"
  otlpHeaders: ""
  traceHeaders: ""

serviceMonitor:
  enabled: false
  port: 26660
  additionalLabels:
    release: kube-prometheus-stack

alerting:
  enabled: false
  interval: ""
  additionalLabels:
    release: kube-prometheus-stack
  annotations: {}
  # scrapeTimeout: 10s
  # path: /metrics
  prometheusRule:
    enabled: true
    additionalLabels:
      release: kube-prometheus-stack
    namespace: monitoring
    rules:
    - alert: Bridge_Withdrawer_Down
      expr: up{container="evm-bridge-withdrawer"} == 0  # Insert your query Expression
      for: 1m  # Rough number but should be enough to init warn
      labels:
        severity: warning
      annotations:
        summary: Bridge Withdrawer is Down (instance {{ $labels.instance }})
        description: "bridge withdrawer node '{{ $labels.namespace }}' has disappeared from Prometheus target discovery.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

# When deploying in a production environment should use a secret provider
# This is configured for use with GCP, need to set own resource names
# and keys
secretProvider:
  enabled: false
  provider: gcp
  # May need to update this template to match the secret provider
  # it will be passed an object containing:
  # {
  #   key: {
  #     resourceName: <resourceName>,
  #     filename: <filename>,
  #     key: <key>
  #   }
  # }
  #
  # Can update set the source of each chain key at chain.<chain>.key.secret to
  # match the secret provider's requirements. The default works for GCP.
  # The secret file must be mapped to the <key.filename>
  parametersTemplate: |-
    secrets: |
      - resourceName: {{ .key.resourceName }}
        fileName: "{{ .key.filename }}"
